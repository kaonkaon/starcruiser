<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

hspeed = 0; //speed
gun_heat = 0; //gun heat
cool = true;
global.hp = 100;
global.scr = 0;
heat_max = 15;
heat_warn = 11;

// -- hud --
hud_x = x + 32;
hud_y = y + 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// gun cooling
if(!cool){
    cool = true;
    alarm[0] = 10;
}
else if(cool &amp;&amp; gun_heat &gt; 0){
    gun_heat -= 1;
    alarm[0] = 10;
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//control
if(gamepad_button_check(0, gp_padl)) hspeed  = -5;
else if(gamepad_button_check(0, gp_padr)) hspeed = 5;
else hspeed = 0;

//shoot
if(gamepad_button_check_pressed(0, gp_face1)) {
    if(gun_heat &lt; heat_max &amp;&amp; cool){
        instance_create(x, y - 5, obj_bullet_player);
        gun_heat += 1;
        alarm[0] = 10;
    }
    else if(gun_heat &gt;= heat_max){
        cool = false;
        alarm[0] = 100;
    }
}

//clamp x coordinate
x = clamp(x, 0, room_width);

//set hud x
if(x &gt; 896) hud_x = x - 32;
else if(x &lt;= 896) hud_x = x + 32;

//set hud y
if(y &gt; 480) hud_y = y - 32;
else if(y &lt;= 480) hud_y = y + 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//set color
if(global.hp &gt; 20) draw_set_colour(c_white);
else if(global.hp &lt;= 20) draw_set_colour(c_red);

//draw hud
draw_set_font(ft_hud);
draw_set_valign(fa_middle);

//set hud text alignment
if(x &gt; 896) draw_set_halign(fa_right);
else if(x &lt;= 896) draw_set_halign(fa_left);

//draw text
draw_text(hud_x, hud_y, "Score: " + string(global.scr) + "
Health: " + string(global.hp) + "
Gun Heat: ");

//draw line that connect ship and hud
draw_line(x, y, hud_x, hud_y);

//draw gun heat bar
if(gun_heat &lt; heat_warn) draw_set_colour(c_white);
else if(gun_heat &gt;= heat_warn) draw_set_colour(c_red);

var tw = string_width("Gun Heat: ");
var th = string_height("Gun Heat: ");
draw_rectangle(hud_x + tw, hud_y - (th / 2) + th, hud_x + (tw + ((gun_heat / heat_max) * 100)), hud_y - (th / 2) + (th * 2), false);
draw_rectangle(hud_x + tw, hud_y - (th / 2) + th, hud_x + (tw + 100), hud_y - (th / 2) + (th * 2), true)

//set aligment to default
draw_set_valign(fa_top);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
